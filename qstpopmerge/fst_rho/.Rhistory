demo()
Hershey
> x = seq(1,10) # set the x-axis values
> b = 3 # set the intercept
> m = 0.5 # set the slope
> y = m*x + b
> plot(x,y) # plot paired coordinates. This only works if x and y are the same length!
> plot(y~x) # plot y as a function of x
1+1
print('Hello world!') # why quotes? why parenthesis? what is the 'argument' for this function?
help(print) # now why aren't there quotes?
mixed.data <- c(1,2,'a',7)
typeof(mixed.data) # it's a character, and now all the numbers are in quotes!
number.set<-c(number.set, 11, 12, 13) # concatenate the object with itself
number.set<-c(number.set, 11, 12, 13) # concatenate the object with itself
pasted.data <- paste(1,2,3)
# This function works like c(), but puts all of the arguments into one element
length(pasted.data)
rep.data <- rep(10,5)
?rep.data
?rep
x = seq(1,10) # set the x-axis values
b = 3 # set the intercept
m = 0.5 # set the slope
y = m*x + b
plot(x,y) # plot paired coordinates. This only works if x and y are the same length!
plot(y~x) # plot y as a function of x
getwd() # This returns the path to the working directory. This is where R will save your outputs.
library(qtl)
data(hyper)
summary(hyper)
plot.missing(hyper, reorder = TRUE)
hyper <- calc.errorlod(hyper, error.prob=0.01)
top.errorlod(hyper)
plot.geno(hyper, chr=1, ind=c(117:119,137:139,157:184))
hyper <- calc.genoprob(hyper, step=2, error.prob=0.01)
## Scan to get interval mapping (em) and Haley-Knott (hk) LOD curves.
out.em <- scanone(hyper)
out.hk <- scanone(hyper, method="hk")
## Summaries: max per chromosome above threshold.
summary(out.em, threshold=3)
summary(out.hk, threshold=3)
plot(out.em, chr = c(1,4,6,15))
plot(out.hk, chr = c(1,4,6,15), add = TRUE, lty = 2)
## Permutation thresholds (much faster with hk).
operm.hk <- scanone(hyper, method="hk", n.perm=1000)
summary(operm.hk, alpha=c(0.01,0.05))
abline(h = summary(operm.hk, alpha=c(0.01,0.05)), lty = 3)
summary(out.hk, perms=operm.hk, alpha=0.05, pvalues=TRUE)
## Calculate genoprob on coarser grid (faster) for 2-D scan.
hyper <- calc.genoprob(hyper, step=5, error.prob=0.01)
out2.hk <- scantwo(hyper, method="hk")
summary(out2.hk, thresholds=c(6.0, 4.7, 4.4, 4.7, 2.6))
summary(out2.hk, thresholds=c(6.0, 4.7, 4.4, 4.7, 2.6), what = "int")
plot(out2.hk, chr=c(1,4,6,15))
hyper <- sim.geno(hyper, step=2, n.draws=16, error.prob=0.01)
qtl <- makeqtl(hyper, chr = c(1, 1, 4, 6, 15), pos = c(50, 76, 30, 70, 20))
my.formula <- y ~ Q1 + Q2 + Q3 + Q4 + Q5 + Q4:Q5
out.fitqtl <- fitqtl(hyper, pheno.col = 1, qtl, formula=my.formula)
summary(out.fitqtl)
hyper <- sim.geno(hyper, step=2, n.draws=16, error.prob=0.01)
effectplot(hyper, pheno.col = 1, mname1 = "D1Mit334")
effectplot(hyper, pheno.col = 1, mname1 = "D4Mit164")
markers <- find.marker(hyper, chr = c(6,15), pos = c(70,20))
markers
effectplot(hyper, pheno.col = 1, mname1 = markers[1], mname2 = markers[2])
effectplot(hyper, pheno.col = 1, mname1 = markers[2], mname2 = markers[1])
effectplot(hyper, pheno.col = 1, mname1 = "D1Mit334")
effectplot(hyper, pheno.col = 1, mname1 = "D4Mit164")
effectplot(hyper, pheno.col = 1, mname1 = markers[1], mname2 = markers[2])
effectplot(hyper, pheno.col = 1, mname1 = markers[2], mname2 = markers[1])
plot.pxg(hyper, "D1Mit334")
plot.pxg(hyper, "D4Mit164")
plot.pxg(hyper, markers)
markers
library(qtl)
library(qtl)
install.packages("asreml")
ASREML_LICENSE_FILE=/Library/Frameworks/R.framework/Versions/2.12/Resources/lib/asreml.lic
library(asreml)
install.packages("PopGenReport")
install.packages("PopGenReport", repos='http://cran.rstudio.com/')
install.packages("PopGenReport")
setwd("~/Dropbox/QSTFST/match/driftsel/")
# install.packages("MCMCpack")
# install.packages("SparseM")
# download packates from http://www.helsinki.fi/biosci/egru/software/driftsel.html
# install.packages("~/Downloads/driftsel_2.1.2.tar.gz", repos = NULL, type = "source")
# install.packages("~/Downloads/RAFM_1.2.tar.gz", repos = NULL, type = "source",
#                  lib="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library(driftsel)
library(RAFM)
load("samp.f5000.RData")
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,2), main="Trait space", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,3), main="Trait space", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,4), main="Trait space", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,5), main="Trait space", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(5,6), main="Trait space", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(3,6), main="Trait space: ", siz=.95)
viz.traits
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(3,6), xlab="test", main="Trait space: Petal Length and Nectar Concentration", siz=.95)
newviz <- function (fixedpost, popefpost, Gpost, THpost, traits, siz = 0.5,
main = NA, xlab, ylab, xlim, ylim)
{
fixedpost = fixedpost[1, traits, ]
popefpost = popefpost[, traits, ]
Gpost = Gpost[traits, traits, ]
popef = matrix(NA, nrow = dim(popefpost)[1], ncol = dim(popefpost)[2])
G = matrix(NA, nrow = dim(Gpost)[1], ncol = dim(Gpost)[2])
TH = matrix(NA, nrow = dim(THpost)[1], ncol = dim(THpost)[2])
mu = rep(NA, dim(Gpost)[1])
for (i in 1:length(traits)) {
mu[i] = mean(fixedpost[i, ])
for (j in 1:length(traits)) {
G[i, j] = mean(Gpost[i, j, ])
}
for (j in 1:dim(popefpost)[1]) {
popef[j, i] = mean(popefpost[j, i, ])
}
}
for (i in 1:nrow(TH)) {
for (j in 1:ncol(TH)) {
TH[i, j] = mean(THpost[i, j, ])
}
}
npop = ncol(TH)
ntr = length(traits)
npop = nrow(popef)
colvec = 1:9
colvec[7] = "orange"
colvec[9] = "chartreuse"
i = 1
j = 2
ei = mu[i]
ej = mu[j]
Gthis = matrix(c(G[i, i], G[i, j], G[j, i], G[j, j]), ncol = 2)
# xlab = paste("trait", traits[i])
# ylab = paste("trait", traits[j])
M = max(c(sqrt(2 * G[i, i] * diag(TH)), sqrt(2 * G[j, j] *
diag(TH)), popef))
plot(ei, ej, pch = 16, cex = 0, xlim = xlim,
ylim = ylim, xlab = xlab, ylab = ylab, main = main)
for (k in 1:npop) {
mu = c(ei, ej)
Sigma = 2 * TH[k, k] * Gthis
if (k > 9) {
k = 1 + k%%8
}
ellipsis(mu, Sigma, siz, 1, colvec[k])
}
text(ei + popef[, i], ej + popef[, j], 1:npop, cex = 1, col = colvec)
text(ei, ej, "A")
}
newviz(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(3,6), main="Trait space: Petal Length and Nectar Concentration", siz=.95, xlab="Petal Length", ylab="Nectar Concentration", xlim=c(-1.3,1.3), ylim=c(-1,1))
ellipsis
viz.traits
ellipsis
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(3,6), main="Trait space: Petal Length and Nectar Concentration", siz=.95)
source('~/.active-rstudio-document')
newviz(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(3,6), main="Trait space: Petal Length and Nectar Concentration", siz=.95, xlab="Petal Length", ylab="Nectar Concentration", xlim=c(-1.3,1.3), ylim=c(-1,1))
MH
neut.test
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(3,5), main="Trait space", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(4,5), main="Trait space", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,2), main="Trait space", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,3), main="Trait space", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,3), main="Trait space", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,2), main="Trait space", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,5), main="Trait space", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,4), main="Trait space", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,4), main="Trait space", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,3), main="Trait space", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,2), main="Trait space", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(4,5), main="Trait space: Color and Nectar Volume", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(3,6), main="Trait space: Petal Length and Nectar Concentration", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(2,4), main="Trait space: Corolla Length and Color", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,5), main="Trait space", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(4,5), main="Trait space: Color and Nectar Volume", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,2), main="Trait space: Corolla Length and Color", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,5), main="Trait space", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(2,4), main="Trait space: Color and Nectar Volume", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(2,4), main="Trait space: Corolla Width and Color", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,5), main="Trait space: Corolla Length and Nectar Volume", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(3,6), main="Trait space: Petal Length and Nectar Concentration", siz=.95)
heat.theta(afm$theta)
viz.theta(afm$theta)
viz.theta(afm$theta, distance=NA)
par(mfrow=c(2,2))
viz.theta(afm$theta, distance=NA)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(2,4), main="Trait space: Corolla Width and Color", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,5), main="Trait space: Corolla Length and Nectar Volume", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(3,6), main="Trait space: Petal Length and Nectar Concentration", siz=.95)
par(mfrow=c(2,2))
viz.theta(afm$theta, distance=NA)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(2,4), main="Trait space: Corolla Width and Color", siz=.5)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,5), main="Trait space: Corolla Length and Nectar Volume", siz=.5)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(3,6), main="Trait space: Petal Length and Nectar Concentration", siz=.5)
par(mfrow=c(2,2))
viz.theta(afm$theta, distance=NA)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(4,5), main="Trait space: Corolla Width and Color", siz=.5)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,2), main="Trait space: Corolla Length and Nectar Volume", siz=.5)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(3,6), main="Trait space: Petal Length and Nectar Concentration", siz=.5)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(2,4), main="Trait space: Corolla Width and Color", siz=.5)
viz.theta(afm$theta, distance=NA)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(2,4), main="Trait space: Corolla Width and Color", siz=.5)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,2), main="Trait space: Corolla Length and Nectar Volume", siz=.5)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(3,6), main="Trait space: Petal Length and Nectar Concentration", siz=.5)
par(mfrow=c(2,2))
viz.theta(afm$theta, distance=NA)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(2,4), main="Trait space: Corolla Width and Color", siz=.5)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,2), main="Trait space: Corolla Length and Nectar Volume", siz=.5)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(3,6), main="Trait space: Petal Length and Nectar Concentration", siz=.5)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(2,4), main="Trait space: Corolla Width and Color", siz=.5)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,5), main="Trait space: Corolla Length and Nectar Volume", siz=.5)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(3,6), main="Trait space: Petal Length and Nectar Concentration", siz=.5)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(2,4), main="Trait space: Corolla Width and Color", siz=.5)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,2), main="Trait space: Corolla Length and Nectar Volume", siz=.5)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(3,6), main="Trait space: Petal Length and Nectar Concentration", siz=.5)
par(mfrow=c(2,2))
viz.theta(afm$theta, distance=NA)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(2,4), main="Trait space: Corolla Width and Color", siz=.5)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,2), main="Trait space: Corolla Length and Nectar Volume", siz=.5)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(3,6), main="Trait space: Petal Length and Nectar Concentration", siz=.5)
par(mfrow=c(2,2))
viz.theta(afm$theta, distance=NA)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(2,4), main="Trait space: Corolla Width and Color", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,2), main="Trait space: Corolla Length and Corolla Width", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(3,6), main="Trait space: Petal Length and Nectar Concentration", siz=.95)
pdf(driftsel_95_quad.pdf)
par(mfrow=c(2,2))
viz.theta(afm$theta, distance=NA)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(2,4), main="Trait space: Corolla Width and Color", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,2), main="Trait space: Corolla Length and Corolla Width", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(3,6), main="Trait space: Petal Length and Nectar Concentration", siz=.95)
dev.off()
pdf(driftsel_50_quad.pdf)
par(mfrow=c(2,2))
viz.theta(afm$theta, distance=NA)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(2,4), main="Trait space: Corolla Width and Color", siz=.5)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,2), main="Trait space: Corolla Length and Corolla Width", siz=.5)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(3,6), main="Trait space: Petal Length and Nectar Concentration", siz=.5)
dev.off()
pdf("driftsel_95_quad.pdf")
par(mfrow=c(2,2))
viz.theta(afm$theta, distance=NA)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(2,4), main="Trait space: Corolla Width and Color", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,2), main="Trait space: Corolla Length and Corolla Width", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(3,6), main="Trait space: Petal Length and Nectar Concentration", siz=.95)
dev.off()
pdf("driftsel_50_quad.pdf")
par(mfrow=c(2,2))
viz.theta(afm$theta, distance=NA)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(2,4), main="Trait space: Corolla Width and Color", siz=.5)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,2), main="Trait space: Corolla Length and Corolla Width", siz=.5)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(3,6), main="Trait space: Petal Length and Nectar Concentration", siz=.5)
dev.off()
heat.theta(afm$theta)
viz.theta(afm$theta)
par(mfrow=c(2,2))
viz.theta(afm$theta)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(2,4), main="Trait space: Corolla Width and Color", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,2), main="Trait space: Corolla Length and Corolla Width", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(3,6), main="Trait space: Petal Length and Nectar Concentration", siz=.95)
pdf("driftsel_95_quad.pdf")
par(mfrow=c(2,2))
viz.theta(afm$theta)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(2,4), main="Trait space: Corolla Width and Color", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,2), main="Trait space: Corolla Length and Corolla Width", siz=.95)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(3,6), main="Trait space: Petal Length and Nectar Concentration", siz=.95)
dev.off()
pdf("driftsel_50_quad.pdf")
par(mfrow=c(2,2))
viz.theta(afm$theta, distance=NA)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(2,4), main="Trait space: Corolla Width and Color", siz=.5)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(1,2), main="Trait space: Corolla Length and Corolla Width", siz=.5)
viz.traits(samp.f$fixed.ef, samp.f$pop.ef, samp.f$G, samp.f$theta, c(3,6), main="Trait space: Petal Length and Nectar Concentration", siz=.5)
dev.off()
load("rho_fst.RData")
setwd("~/Dropbox/QSTFST/qstpopmerge/fst_rho/")
load("rho_fst.RData")
rho<-(2*fst.out)/(1-fst.out)
rho
ave(rho)
rho<-(2*fst.out)/(1-fst.out)
rho
mean(rho)
rho.05<-rho[rank(rho)==length(rho)*.05]
rho.95<-rho[rank(rho)==length(rho)*.95]
hist(rho, breaks=100)
abline(v=rho.05, col="red")
abline(v=rho.95, col="blue")
mean(rho)
